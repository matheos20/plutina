{"ast":null,"code":"var _jsxFileName = \"D:\\\\Matheos\\\\laravelPlutina\\\\FronT\\\\src\\\\pages\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport api from \"../../services/api\";\nimport { AuthContext } from '../../context/AuthContext';\n\n// const Login = () => {\n//     const [formData, setFormData] = useState({\n//         email: \"\",\n//         password: \"\",\n//     });\n//     const [error, setError] = useState(null);\n//     const [success, setSuccess] = useState(null);\n//\n//     const handleChange = (e) => {\n//         setFormData({ ...formData, [e.target.name]: e.target.value });\n//     };\n//\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         setError(null); // reset l'erreur\n//\n//         try {\n//             // 1. Appel CSRF cookie\n//             await axios.get('http://127.0.0.1:8000/sanctum/csrf-cookie', {\n//                 withCredentials: true,\n//             });\n//\n//             // 2. Login\n//             const response = await api.post('/login', {\n//                 email: formData.email,\n//                 password: formData.password,\n//             });\n//\n//             login(res.data.user); // stocke user dans contexte + localStorage\n//             navigate('/'); // redirige vers home ou tableau de bord\n//\n//         } catch (err) {\n//             if (err.response) {\n//                 setError(err.response.data.message || \"Erreur serveur\");\n//             } else {\n//                 setError(\"Erreur de connexion au serveur\");\n//             }\n//         }\n//     };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      // CSRF cookie (si Laravel Sanctum)\n      await api.get('/sanctum/csrf-cookie', {\n        withCredentials: true\n      });\n\n      // Login\n      const response = await api.post('/login', {\n        email: formData.email,\n        password: formData.password\n      });\n\n      // Mise à jour du contexte auth avec user reçu\n      login(response.data.user);\n\n      // Redirection vers home\n      navigate('/');\n    } catch (err) {\n      if (err.response) {\n        setError(err.response.data.message || 'Erreur serveur');\n      } else {\n        setError('Erreur de connexion au serveur');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Mot de passe\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"ax2o5b19y4/+6b4lXuQlNi3P7oY=\", true);\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","api","AuthContext","jsxDEV","_jsxDEV","Login","_s","login","useContext","navigate","useNavigate","formData","setFormData","email","password","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","get","withCredentials","response","post","data","user","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","success","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["D:/Matheos/laravelPlutina/FronT/src/pages/Login/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport api from \"../../services/api\";\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\n// const Login = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         email: \"\",\r\n//         password: \"\",\r\n//     });\r\n//     const [error, setError] = useState(null);\r\n//     const [success, setSuccess] = useState(null);\r\n//\r\n//     const handleChange = (e) => {\r\n//         setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//     };\r\n//\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         setError(null); // reset l'erreur\r\n//\r\n//         try {\r\n//             // 1. Appel CSRF cookie\r\n//             await axios.get('http://127.0.0.1:8000/sanctum/csrf-cookie', {\r\n//                 withCredentials: true,\r\n//             });\r\n//\r\n//             // 2. Login\r\n//             const response = await api.post('/login', {\r\n//                 email: formData.email,\r\n//                 password: formData.password,\r\n//             });\r\n//\r\n//             login(res.data.user); // stocke user dans contexte + localStorage\r\n//             navigate('/'); // redirige vers home ou tableau de bord\r\n//\r\n//         } catch (err) {\r\n//             if (err.response) {\r\n//                 setError(err.response.data.message || \"Erreur serveur\");\r\n//             } else {\r\n//                 setError(\"Erreur de connexion au serveur\");\r\n//             }\r\n//         }\r\n//     };\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const { login } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n\r\n        try {\r\n            // CSRF cookie (si Laravel Sanctum)\r\n            await api.get('/sanctum/csrf-cookie', { withCredentials: true });\r\n\r\n            // Login\r\n            const response = await api.post('/login', {\r\n                email: formData.email,\r\n                password: formData.password,\r\n            });\r\n\r\n            // Mise à jour du contexte auth avec user reçu\r\n            login(response.data.user);\r\n\r\n            // Redirection vers home\r\n            navigate('/');\r\n        } catch (err) {\r\n            if (err.response) {\r\n                setError(err.response.data.message || 'Erreur serveur');\r\n            } else {\r\n                setError('Erreur de connexion au serveur');\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"register-content\">\r\n            <h2>Connexion</h2>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"field\">\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                </div>\r\n                <div className=\"field\">\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                </div>\r\n                <button type=\"submit\">Se connecter</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,oBAAoB;AACpC,SAASC,WAAW,QAAQ,2BAA2B;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAM,CAAC,GAAGC,UAAU,CAACN,WAAW,CAAC;EACzC,MAAMO,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACrCa,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiB,YAAY,GAAIC,CAAC,IAAK;IACxBN,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACO,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACjE,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBP,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA;MACA,MAAMf,GAAG,CAACuB,GAAG,CAAC,sBAAsB,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;;MAEhE;MACA,MAAMC,QAAQ,GAAG,MAAMzB,GAAG,CAAC0B,IAAI,CAAC,QAAQ,EAAE;QACtCd,KAAK,EAAEF,QAAQ,CAACE,KAAK;QACrBC,QAAQ,EAAEH,QAAQ,CAACG;MACvB,CAAC,CAAC;;MAEF;MACAP,KAAK,CAACmB,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;;MAEzB;MACApB,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACV,IAAIA,GAAG,CAACJ,QAAQ,EAAE;QACdV,QAAQ,CAACc,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAACG,OAAO,IAAI,gBAAgB,CAAC;MAC3D,CAAC,MAAM;QACHf,QAAQ,CAAC,gCAAgC,CAAC;MAC9C;IACJ;EACJ,CAAC;EAID,oBACIZ,OAAA;IAAK4B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7B7B,OAAA;MAAA6B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBtB,KAAK,iBAAIX,OAAA;MAAGkC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAElB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDG,OAAO,iBAAIpC,OAAA;MAAGkC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAN,QAAA,EAAEO;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvDjC,OAAA;MAAMqC,QAAQ,EAAEnB,YAAa;MAAAW,QAAA,gBACzB7B,OAAA;QAAK4B,SAAS,EAAC,OAAO;QAAAC,QAAA,eACtB7B,OAAA;UACIsC,IAAI,EAAC,OAAO;UACZtB,IAAI,EAAC,OAAO;UACZuB,WAAW,EAAC,OAAO;UACnBtB,KAAK,EAAEV,QAAQ,CAACE,KAAM;UACtB+B,QAAQ,EAAE3B,YAAa;UACvB4B,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACNjC,OAAA;QAAK4B,SAAS,EAAC,OAAO;QAAAC,QAAA,eACtB7B,OAAA;UACIsC,IAAI,EAAC,UAAU;UACftB,IAAI,EAAC,UAAU;UACfuB,WAAW,EAAC,cAAc;UAC1BtB,KAAK,EAAEV,QAAQ,CAACG,QAAS;UACzB8B,QAAQ,EAAE3B,YAAa;UACvB4B,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACNjC,OAAA;QAAQsC,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC/B,EAAA,CA1EID,KAAK;AAAAyC,EAAA,GAALzC,KAAK;AA4EX,eAAeA,KAAK;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}