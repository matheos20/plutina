{"ast":null,"code":"var _jsxFileName = \"D:\\\\Matheos\\\\laravelPlutina\\\\FronT\\\\src\\\\pages\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport api from \"../../services/api\";\nimport { AuthContext } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n// const Login = () => {\n//     const [formData, setFormData] = useState({\n//         email: \"\",\n//         password: \"\",\n//     });\n//     const [error, setError] = useState(null);\n//     const [success, setSuccess] = useState(null);\n//\n//     const handleChange = (e) => {\n//         setFormData({ ...formData, [e.target.name]: e.target.value });\n//     };\n//\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         setError(null); // reset l'erreur\n//\n//         try {\n//             // 1. Appel CSRF cookie\n//             await axios.get('http://127.0.0.1:8000/sanctum/csrf-cookie', {\n//                 withCredentials: true,\n//             });\n//\n//             // 2. Login\n//             const response = await api.post('/login', {\n//                 email: formData.email,\n//                 password: formData.password,\n//             });\n//\n//             login(res.data.user); // stocke user dans contexte + localStorage\n//             navigate('/'); // redirige vers home ou tableau de bord\n//\n//         } catch (err) {\n//             if (err.response) {\n//                 setError(err.response.data.message || \"Erreur serveur\");\n//             } else {\n//                 setError(\"Erreur de connexion au serveur\");\n//             }\n//         }\n//     };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState(null);\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      await axios.get('http://127.0.0.1:8000/sanctum/csrf-cookie', {\n        withCredentials: true\n      });\n      const res = await api.post('/login', {\n        email: formData.email,\n        password: formData.password\n      });\n      login(res.data.user);\n      navigate('/');\n    } catch (err) {\n      if (err.response) {\n        setError(err.response.data.message || \"Erreur serveur\");\n      } else {\n        setError(\"Erreur de connexion au serveur\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Mot de passe\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"+OZc+ELTrJBFwaizhGkBDl99Vmg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","api","AuthContext","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","error","setError","login","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","get","withCredentials","res","post","data","user","err","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","success","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["D:/Matheos/laravelPlutina/FronT/src/pages/Login/Login.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport api from \"../../services/api\";\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\n// const Login = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         email: \"\",\r\n//         password: \"\",\r\n//     });\r\n//     const [error, setError] = useState(null);\r\n//     const [success, setSuccess] = useState(null);\r\n//\r\n//     const handleChange = (e) => {\r\n//         setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//     };\r\n//\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         setError(null); // reset l'erreur\r\n//\r\n//         try {\r\n//             // 1. Appel CSRF cookie\r\n//             await axios.get('http://127.0.0.1:8000/sanctum/csrf-cookie', {\r\n//                 withCredentials: true,\r\n//             });\r\n//\r\n//             // 2. Login\r\n//             const response = await api.post('/login', {\r\n//                 email: formData.email,\r\n//                 password: formData.password,\r\n//             });\r\n//\r\n//             login(res.data.user); // stocke user dans contexte + localStorage\r\n//             navigate('/'); // redirige vers home ou tableau de bord\r\n//\r\n//         } catch (err) {\r\n//             if (err.response) {\r\n//                 setError(err.response.data.message || \"Erreur serveur\");\r\n//             } else {\r\n//                 setError(\"Erreur de connexion au serveur\");\r\n//             }\r\n//         }\r\n//     };\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [error, setError] = useState(null);\r\n\r\n    const { login } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n\r\n        try {\r\n            await axios.get('http://127.0.0.1:8000/sanctum/csrf-cookie', {\r\n                withCredentials: true,\r\n            });\r\n\r\n            const res = await api.post('/login', {\r\n                email: formData.email,\r\n                password: formData.password,\r\n            });\r\n\r\n            login(res.data.user);\r\n            navigate('/');\r\n        } catch (err) {\r\n            if (err.response) {\r\n                setError(err.response.data.message || \"Erreur serveur\");\r\n            } else {\r\n                setError(\"Erreur de connexion au serveur\");\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"register-content\">\r\n            <h2>Connexion</h2>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            {success && <p style={{ color: \"green\" }}>{success}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"field\">\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                </div>\r\n                <div className=\"field\">\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                </div>\r\n                <button type=\"submit\">Se connecter</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}